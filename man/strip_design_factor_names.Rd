% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_manip_utils.R
\name{strip_design_factor_names}
\alias{strip_design_factor_names}
\title{Simplify the column names of a simple design matrix}
\usage{
strip_design_factor_names(design, prefixes = names(attr(design, "contrasts")))
}
\arguments{
\item{design}{The design matrix whose column names should be
cleaned up (usually created by \code{model.matrix()}).}

\item{prefixes}{A character vector of prefixes to be deleted from
column names. Normally, this argument is set automatically
based on the attributes of \code{design}, but you can set it
manually.}
}
\value{
The same matrix as \code{design}, possibly with some column
names shortened by deleting one of \code{prefixes} from the start of
the column names.

Column names for columns not corresponding to factors are left
unchanged.

Note that this is only guaranteed to work correctly if none of your
variable names are prefixes of other variable names.

A warning will be issued if, after stripping factor names, the
column names of \code{design} are no longer unique.
}
\description{
The standard \code{\link[=model.matrix]{model.matrix()}} function generates column names for
factor columns by concatenating the factor's name with the level.
This helps guarantee non-duplicated column names in the general
case, but for simple cases it results in overly long and complex
column names. This function removes the factor names, leaving only
the level names.
}
\examples{

targets <- data.frame(group = letters[1:2], batch = LETTERS[1:5], x = rnorm(10))
design <- model.matrix(~0 + group + x + batch, targets)
colnames(design)
design2 <- strip_design_factor_names(design)
colnames(design2)

}
