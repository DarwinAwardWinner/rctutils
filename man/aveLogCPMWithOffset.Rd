% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edgeR_utils.R
\name{aveLogCPMWithOffset}
\alias{aveLogCPMWithOffset}
\title{Version of \code{edgeR::aveLogCPM()} that uses offsets by default}
\usage{
aveLogCPMWithOffset(y, ...)
}
\arguments{
\item{y, ...}{All arguments have the same meaning as in
\code{\link[edgeR:aveLogCPM]{edgeR::aveLogCPM()}}, except that if \code{y} is a
\code{edgeR::DGEList()}, the offset matrix will be used in favor of
the sample normalized library sizes.}
}
\value{
See \code{\link[edgeR:aveLogCPM]{edgeR::aveLogCPM()}}.

Note that \code{edgeR::aveLogCPM()} also accepts an offset argument. The
only difference is that it doesn't use the offset matrix from a
DGEList by default, whereas this function does.
}
\description{
This is the same as \code{\link[edgeR:aveLogCPM]{edgeR::aveLogCPM()}}, except that when called
on a \code{\link[edgeR:DGEList]{edgeR::DGEList()}} object that contains an offset matrix, that
matrix will be used for normalization instead of the library sizes
and normalization factors. If called on a matrix of counts, the
offset must be supplied manually.
}
\examples{

# TODO Steal from aveLogCPM and maybe scaleOffset

}
\seealso{
\code{\link[edgeR:getOffset]{edgeR::getOffset()}}
}
