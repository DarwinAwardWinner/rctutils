% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel_utils.R
\name{featureCountsParallel}
\alias{featureCountsParallel}
\title{(Alternative) parallel version of \code{Rsubread::featureCounts()}}
\usage{
featureCountsParallel(files, ..., BPPARAM = BiocParallel::bpparam())
}
\arguments{
\item{files}{This has the same meaning as in
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}}

\item{...}{Other arguments are passed to
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}}

\item{BPPARAM}{A BiocParallelParam instance that determines how to
parallelize the operation}
}
\value{
See \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}.
}
\description{
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}} already has its own parallel option via
the \code{nthreads} argument, but sometimes this does not result in a
speed-up, presumably due to the file reading being a bottleneck.
Instead, this function calls \code{Rsubread::featureCounts()} on
multiple files in parallel. Empirically, this sometimes results in
a better parallel speed-up than using \code{nthreads}.
}
\seealso{
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}, \code{\link[BiocParallel:bplapply]{BiocParallel::bplapply()}}
}
